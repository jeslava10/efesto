import{t as e}from"./dom-utils-04e3c6d2.js";import{d as t,o as s,r as i,e as a,a as r,g as n,c as o,b as d,i as c,C as m,f as l,L as p}from"./baseChart-c2c2b69a.js";import"./dom-f93f7533.js";import"./_tslib-6e8ca86b.js";import"./css-classes-f3f8ed66.js";import"./disposable-d2c2d283.js";import"./tooltip-a6a08189.js";class u extends m{constructor(e,t,s){super(e,t,s)}get widget(){return super.widget}createWidgetBuilder(e,t,s){const i=this._dxBlazorViz.viz.dxPieChart;return function(t){s(new i(e,t))}}completeChartOptions(t,s,i){let a=!1;const r=this._selectionController;const n=super.completeChartOptions(t,s,i);return n.onDrawn=async function(s){a||(a=!0,l(t,s.component,p.point,r),e(t,"dx-loading",!1))},n.commonSeriesSettings={argumentField:"argument",valueField:"value",type:"donut"},n.diameter=s.diameter,n.minDiameter=s.minDiameter,n.innerRadius=void 0===s.innerRadius?0:s.innerRadius,n}}const g={init:function(e,t,s){return e?c(e,t,s,((e,t,s)=>new u(e,t,s))):Promise.resolve()},dispose:t,onSeriesVisibleChanged:s,render:i,exportToFile:a,exportToBase64AndGetLengthAsync:r,getBase64ImageChunk:n,clearBase64ImageData:o,resetSelection:d};export{g as default};
