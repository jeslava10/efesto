import{t as e}from"./dom-utils-04e3c6d2.js";import{d as t,o,r as s,e as i,a,c as r,g as n,b as l,i as d,C as c,f as u,L as p}from"./baseChart-c2c2b69a.js";import"./dom-f93f7533.js";import"./_tslib-6e8ca86b.js";import"./css-classes-f3f8ed66.js";import"./disposable-d2c2d283.js";import"./tooltip-a6a08189.js";class g extends c{constructor(e,t,o){super(e,t,o)}get widget(){return super.widget}createWidgetBuilder(e,t,o){const s=t.series.map((e=>e.category))[0],i="pie"===s||"donut"===s?this._dxBlazorViz.viz.dxPieChart:this._dxBlazorViz.viz.dxChart;return function(t){t.type=s,o(new i(e,t))}}completeChartOptions(t,o,s){let i=!1;const a=window.getComputedStyle(document.body).getPropertyValue("color"),r=this._selectionController;r.setSeriesSelectionMode(o.seriesSelectionMode);const n=super.completeChartOptions(t,o,s);n.rotated=o.rotated,n.barGroupPadding=o.barGroupPadding,n.barGroupWidth=o.barGroupWidth,n.synchronizeMultiAxes=o.synchronizeMultiAxes,n.autoHidePointMarkers=o.autoHidePointMarkers,n.commonAxisSettings={label:{overlappingBehavior:"rotate",rotationAngle:45,font:{color:a,opacity:.75}}};const l=this.dotNetHelper;return n.onSeriesClick=e=>{var t;const o=e.target,s=null===(t=this._pointClickArgs)||void 0===t?void 0:t.target;l.invokeMethodAsync("OnSeriesClickAsync",o.index,null==s?void 0:s.data,null==s?void 0:s.tag),this._pointClickArgs=null,this._selectionController.selectSeriesAndPoint(o,s)},n.commonSeriesSettings={argumentField:"argument",valueField:"value",openValueField:"openValue",highValueField:"highValue",lowValueField:"lowValue",closeValueField:"closeValue",rangeValue1Field:"startValue",rangeValue2Field:"endValue",sizeField:"size",type:"bar"},n.onDrawn=async function(o){i||(i=!0,u(t,o.component,p.series,r),e(t,"dx-loading",!1))},n.valueAxis=o.valueAxis,n.panes=o.panes,n.argumentAxis=o.argumentAxis,n.argumentAxis&&(n.argumentAxis.categories=n.argumentAxis.categories||[]),n.zoomAndPan=o.zoomAndPan,n.scrollBar=o.scrollBar,n.resizePanesOnZoom=!0,n.seriesSelectionMode=o.seriesSelectionMode,n}}const m={init:function(e,t,o){return e?d(e,t,o,((e,t,o)=>new g(e,t,o))):Promise.resolve()},dispose:t,onSeriesVisibleChanged:o,render:s,exportToFile:i,exportToBase64AndGetLengthAsync:a,clearBase64ImageData:r,getBase64ImageChunk:n,resetSelection:l};export{m as default};
