import{L as t}from"./layouthelper-dc0e1370.js";const e=(t,e)=>void 0!==t[e],r=(t,r)=>{const n=r();if(0===n.length)throw new Error("empty interface");for(const r of n)if(!e(t,r))return!1;return!0};class n{static getParent(e,n){var a;return r(e,(()=>["logicalParent"]))&&null!==(a=e.logicalParent)&&void 0!==a?a:t.getParent(e,n)}static findParent(t,e,r=!0){for(const a of n.getRootPath(t,null,r)){if(a&&e(a))return a}return null}static containsElement(t,e){return!!e&&null!==n.findParent(e,(e=>e===t))}static*getRootPath(t,e=null,r=!0){let a=n.getParent(t,r);for(;a&&a!==e;)yield a,a=n.getParent(a,r)}}export{n as L,r as i};
