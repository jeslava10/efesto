import{i as e,L as r}from"./logicaltreehelper-bc8e12d3.js";import{L as a}from"./lit-element-base-7a85dca5.js";class t extends a{constructor(){super(),this._logicalParent=null,this._logicalChildren=new Array}get hasLogicalParent(){return!!this.logicalParent}get logicalParent(){return this._logicalParent}set logicalParent(e){this._logicalParent=e}get logicalChildren(){return this._logicalChildren}addLogicalChild(e){if(e.logicalParent)throw new Error("Child element already added.");this._logicalChildren.push(e),e.logicalParent=this}removeLogicalChild(e){e.logicalParent=null;const r=this._logicalChildren.indexOf(e);r>-1&&this._logicalChildren.splice(r,1)}async processCapturedKeyDownAsync(r,a){a.handled||this.logicalParent&&e(this.logicalParent,(()=>["processCapturedPointerDownAsync","processCapturedKeyDownAsync"]))&&await this.logicalParent.processCapturedKeyDownAsync(r,a)}async processCapturedPointerDownAsync(a,t){if(t.handled)return;const n=r.findParent(this,(r=>e(r,(()=>["processCapturedPointerDownAsync","processCapturedKeyDownAsync"]))));n&&e(n,(()=>["processCapturedPointerDownAsync","processCapturedKeyDownAsync"]))&&await n.processCapturedPointerDownAsync(a,t)}}export{t as D};
