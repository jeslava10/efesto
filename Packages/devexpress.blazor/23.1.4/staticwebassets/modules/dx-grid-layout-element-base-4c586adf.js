import{_ as e}from"./_tslib-6e8ca86b.js";import{d as t}from"./dom-f93f7533.js";import{C as s}from"./css-classes-f3f8ed66.js";import{e as o}from"./property-d3853089.js";import{S as a}from"./single-slot-element-base-d44a6577.js";import{C as r}from"./custom-events-helper-18f7786a.js";class n{}class i extends CustomEvent{constructor(e){super(i.eventName,{detail:e,bubbles:!0,composed:!0,cancelable:!0})}static create(){return new i(new n)}}i.eventName="dxbl-grid-layout-root-element-base.contentchanged",r.register(i.eventName,(e=>e.detail));class l extends a{constructor(){super(...arguments),this.layoutInfo=""}willUpdate(e){e.has("layoutInfo")&&this.applyLayout()}applyLayout(){if(this.layoutInfo){const e=JSON.parse(this.layoutInfo);for(const t in e)this.style.setProperty(t,`${e[t]}`)}}}e([o({attribute:"layout-info"})],l.prototype,"layoutInfo",void 0);class c extends l{createRenderRoot(){return this.applyLayout(),super.createRenderRoot()}contentChanged(){this.makeChildrenVisible(),this.dispatchEvent(i.create())}makeChildrenVisible(){t.DomUtils.removeClassName(this,s.Invisible)}}export{l as D,c as a};
